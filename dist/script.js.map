{"version":3,"file":"script.js","mappings":"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","sources":["webpack://bettors-den-slider/./src/js/bd-carousel.js"],"sourcesContent":["// Create Button Function\nfunction bdCreateButton(type) {\n    const button = document.createElement(\"button\");\n    const icon = document.createElement(\"i\");\n    icon.classList.add(\"bi\");\n    if (type === 'next') {\n        button.classList.add(\"bd-carousel__btn--next\");\n        icon.classList.add(\"bi-arrow-right-short\");\n    } else if (type === 'prev') {\n        button.classList.add(\"bd-carousel__btn--prev\");\n        icon.classList.add(\"bi-arrow-left-short\");\n    }\n    button.appendChild(icon);\n    return button\n}\n\n// Create Nav Function\nfunction bdCreateNav() {\n    const nav = document.createElement(\"div\");\n    nav.classList.add(\"bd-carousel__nav\");\n    return nav;\n}\n\nclass BdCarousel {\n    constructor(element) {\n        this.element = element;\n        this.wrapper = this.element.querySelector('.bd-carousel__wrapper');\n        this.currentIndex = 0;\n\n        // Read custom attributes\n        this.speed = parseInt(this.element.getAttribute('data-speed')) || 3000; // default to 3000ms\n        this.direction = this.element.getAttribute('data-direction') || 'left'; // default direction is left\n        this.autoplay = this.element.getAttribute('data-autoplay') === 'true'; // default false\n        this.autoplayTimer = parseInt(this.element.getAttribute('data-autoplay-timer')) || 5000; // default to 5000ms\n\n        this.init();\n    }\n\n    init() {\n        const carousel = this.element;\n        const track = this.wrapper;\n        const slides = Array.from(track.children);\n        console.log(slides);\n        const nextButton = bdCreateButton('next');\n        const prevButton = bdCreateButton('prev');\n        const dotsNav = bdCreateNav();\n        let slideWidth = slides[0].getBoundingClientRect().width;\n        const speed = this.speed;\n        const direction = this.direction;\n        const autoplay = this.autoplay;\n        const autoplayTimer = this.autoplayTimer;\n\n        // Append navigation to carousel\n        carousel.appendChild(nextButton);\n        carousel.appendChild(prevButton);\n        carousel.appendChild(dotsNav);\n\n        // Disable button clicks\n        const buttonsDisabled = (boolean) => {\n            nextButton.disabled = boolean;\n            prevButton.disabled = boolean;\n            dots.forEach((dot) => {\n                dot.disabled = boolean;\n            });\n        };\n\n        // Update slide width on window resize\n        window.addEventListener(\"resize\", () => {\n            slideWidth = slides[0].getBoundingClientRect().width;\n        });\n\n\n        function setSlide(slide, index) {\n            // Create dots\n            const dot = document.createElement(\"button\");\n            dot.classList.add(\"bd-carousel__nav-dot\");\n\n            const timer = document.createElement(\"div\");\n            timer.classList.add(\"bd-carousel__nav-dot-timer\");\n\n            const text = document.createElement(\"p\");\n            const slideTitle = slide.querySelector(\".wp-block-heading\")\n            if (slideTitle) {\n                text.innerText = slideTitle.innerText;;\n            }\n\n            // If it's the first slide, set it as active and position it at 0px\n            if (index === 0) {\n                slide.classList.add(\"active\");\n                dot.classList.add(\"active\");\n                slide.style.transform = `translateX(${0}px)`;\n            } else {\n                slide.style.transform = `translateX(${slideWidth}px)`;\n            }\n\n            dot.appendChild(timer);\n            dot.appendChild(text);\n            dotsNav.appendChild(dot);\n        };\n\n        // Set slides positions and nav\n        slides.forEach(setSlide);\n\n        prevButton.classList.add(\"hidden\"); // Hide first arrow on load\n        const dots = Array.from(dotsNav.children); // Set dots arrays\n\n\n        function moveToSlide(currentSlide, targetSlide, isRight) {\n            buttonsDisabled(true);\n\n            targetSlide.style.transition = `transform ${speed}ms ease`;\n            targetSlide.style.transform = `translateX(${0}px)`;\n            currentSlide.classList.remove(\"active\");\n            targetSlide.classList.add(\"active\");\n\n            // Hide arrows if at end of carousel\n            if (!targetSlide.nextElementSibling) {\n                nextButton.classList.add(\"hidden\");\n                prevButton.classList.remove(\"hidden\");\n            } else if (!targetSlide.previousElementSibling) {\n                prevButton.classList.add(\"hidden\");\n                nextButton.classList.remove(\"hidden\");\n            } else {\n                nextButton.classList.remove(\"hidden\");\n                prevButton.classList.remove(\"hidden\");\n            }\n\n            // Transition the current slide out of view after a short delay\n            setTimeout(() => {\n                targetSlide.style.transition = `transform ${0}ms ease`;\n                currentSlide.style.transform = `translateX(${isRight ? \"\" : \"-\"\n                    }${slideWidth}px)`;\n                buttonsDisabled(false);\n            }, speed);\n        };\n\n        function updateDots(currentDot, targetDot) {\n            currentDot.classList.remove(\"active\");\n            targetDot.classList.add(\"active\");\n\n            const oldTimer = currentDot.querySelector(\".bd-carousel__nav-dot-timer\");\n            oldTimer.style.animation = ``;\n\n            const newTimer = targetDot.querySelector(\".bd-carousel__nav-dot-timer\");\n            newTimer.style.animation = `timerAnimation ${autoplayTimer}ms linear forwards`;\n        };\n\n        // Event listener for next button click\n        nextButton.addEventListener(\"click\", (e) => {\n            const currentSlide = track.querySelector(\".active\");\n            const nextSlide = currentSlide.nextElementSibling;\n            const currentDot = dotsNav.querySelector(\".active\");\n            const nextDot = currentDot.nextElementSibling;\n\n            if (nextSlide) {\n                moveToSlide(currentSlide, nextSlide, false);\n                updateDots(currentDot, nextDot);\n            }\n        });\n\n        // Event listener for previous button click\n        prevButton.addEventListener(\"click\", (e) => {\n            const currentSlide = track.querySelector(\".active\");\n            const prevSlide = currentSlide.previousElementSibling;\n            const currentDot = dotsNav.querySelector(\".active\");\n            const prevDot = currentDot.previousElementSibling;\n\n            if (prevSlide) {\n                moveToSlide(currentSlide, prevSlide, true);\n                updateDots(currentDot, prevDot);\n            }\n        });\n\n        // When dot is clicked\n        dotsNav.addEventListener(\"click\", (e) => {\n            const targetDot = e.target.closest(\"button\");\n\n            if (!targetDot) return;\n\n            const currentSlide = track.querySelector(\".active\");\n            const currentDot = dotsNav.querySelector(\".active\");\n            const currentSlideIndex = slides.findIndex((slide) => slide === currentSlide);\n            const targetIndex = dots.findIndex((dot) => dot === targetDot);\n            const targetSlide = slides[targetIndex];\n\n            if (targetIndex > currentSlideIndex) {\n                moveToSlide(currentSlide, targetSlide, false);\n            } else if (targetIndex < currentSlideIndex) {\n                moveToSlide(currentSlide, targetSlide, true);\n            }\n\n            updateDots(currentDot, targetDot);\n        });\n\n\n        // If there's only one slide don't show navigation or autoplay\n        if (slides.length <= 1) {\n            nextButton.classList.add('hidden');\n            prevButton.classList.add('hidden');\n            dotsNav.classList.add('hidden');\n        } else {\n            const currentDot = dotsNav.querySelector(\".active\");\n            const timer = currentDot.querySelector(\".bd-carousel__nav-dot-timer\");\n            timer.style.animation = `timerAnimation ${autoplayTimer}ms linear forwards`;\n\n            function startAutoplay() {\n                return setInterval(() => {\n                    const currentSlide = track.querySelector(\".active\");\n                    const nextSlide = currentSlide.nextElementSibling || slides[0];\n                    const currentDot = dotsNav.querySelector(\".active\");\n                    const nextDot = currentDot.nextElementSibling || dots[0];\n\n                    moveToSlide(currentSlide, nextSlide, false);\n                    updateDots(currentDot, nextDot);\n                }, autoplayTimer);\n            }\n            autoplayInterval = startAutoplay();\n\n\n            nextButton.addEventListener(\"click\", () => {\n                clearInterval(autoplayInterval);\n                autoplayInterval = startAutoplay();\n            });\n            prevButton.addEventListener(\"click\", () => {\n                clearInterval(autoplayInterval);\n                autoplayInterval = startAutoplay();\n            });\n        }\n    }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    document.querySelectorAll('.bd-carousel').forEach((carousel) => {\n        new BdCarousel(carousel);\n    });\n});\n"],"names":["bdCreateButton","type","button","document","createElement","icon","classList","add","appendChild","BdCarousel","element","_classCallCheck","this","wrapper","querySelector","currentIndex","speed","parseInt","getAttribute","direction","autoplay","autoplayTimer","init","key","value","carousel","track","slides","Array","from","children","console","log","nav","nextButton","prevButton","dotsNav","slideWidth","getBoundingClientRect","width","buttonsDisabled","boolean","disabled","dots","forEach","dot","window","addEventListener","slide","index","timer","text","slideTitle","innerText","style","transform","concat","moveToSlide","currentSlide","targetSlide","isRight","transition","remove","nextElementSibling","previousElementSibling","setTimeout","updateDots","currentDot","targetDot","animation","e","nextSlide","nextDot","prevSlide","prevDot","target","closest","currentSlideIndex","findIndex","targetIndex","length","startAutoplay","setInterval","autoplayInterval","clearInterval","querySelectorAll"],"sourceRoot":""}