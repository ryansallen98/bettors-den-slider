{"version":3,"file":"script.js","mappings":"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","sources":["webpack://bettors-den-slider/./src/js/buttons.js","webpack://bettors-den-slider/./src/js/navigation.js","webpack://bettors-den-slider/./src/js/slides.js","webpack://bettors-den-slider/./src/js/script.js"],"sourcesContent":["export function createButton(element, type) {\n    const button = document.createElement(\"button\");\n    const icon = document.createElement(\"i\");\n    icon.classList.add(\"bi\");\n    if (type === 'next') {\n        button.classList.add(\"bd-carousel__btn--next\");\n        icon.classList.add(\"bi-arrow-right-short\");\n    } else if (type === 'prev') {\n        button.classList.add(\"bd-carousel__btn--prev\");\n        icon.classList.add(\"bi-arrow-left-short\");\n    }\n    button.appendChild(icon);\n\n    // Append Button to the DOM\n    element.appendChild(button);\n\n    return button\n}\n\nexport function disableButtons(buttons, boolean) {\n    buttons.forEach((button) => {\n        button.disabled = boolean;\n    });\n}","export function createNav(element) {\n    const nav = document.createElement(\"div\");\n    nav.classList.add(\"bd-carousel__nav\");\n\n    // Append Nav to the DOM\n    element.appendChild(nav);\n\n    return nav;\n}\n\nexport function disableNav(dots, boolean) {\n    dots.forEach((dot) => {\n        dot.disabled = boolean;\n    });\n}\n\nexport function createDot(slide, index, slideWidth) {\n    const dot = document.createElement(\"button\");\n    dot.classList.add(\"bd-carousel__nav-dot\");\n\n    const timer = document.createElement(\"div\");\n    timer.classList.add(\"bd-carousel__nav-dot-timer\");\n\n    const text = document.createElement(\"p\");\n    const slideTitle = slide.querySelector(\".wp-block-heading\")\n    if (slideTitle) {\n        text.innerText = slideTitle.innerText;;\n    }\n\n    // If it's the first slide, set it as active and position it at 0px\n    if (index === 0) {\n        slide.classList.add(\"active\");\n        dot.classList.add(\"active\");\n        slide.style.transform = `translateX(${0}px)`;\n    } else {\n        slide.style.transform = `translateX(${slideWidth}px)`;\n    }\n\n    dot.appendChild(timer);\n    dot.appendChild(text);\n\n    return dot;\n}\n\nexport function updateNav(currentDot, targetDot, autoplayTimer) {\n    currentDot.classList.remove(\"active\");\n    targetDot.classList.add(\"active\");\n\n    const oldTimer = currentDot.querySelector(\".bd-carousel__nav-dot-timer\");\n    oldTimer.style.animation = ``;\n\n    const newTimer = targetDot.querySelector(\".bd-carousel__nav-dot-timer\");\n    newTimer.style.animation = `timerAnimation ${autoplayTimer}ms linear forwards`;\n};","import { disableButtons } from \"./buttons\";\nimport { createDot, disableNav } from \"./navigation\";\n\nexport function setSlide(nav, slide, index, slideWidth) {\n    const dot = createDot(slide, index, slideWidth);\n    nav.appendChild(dot);\n};\n\nexport function moveToSlide({ currentSlide, targetSlide, isRight, nextButton, prevButton, dots, slideWidth, speed }) {\n    disableButtons([nextButton, prevButton], true);\n    disableNav(dots, true);\n\n    targetSlide.style.transition = `transform ${speed}ms ease`;\n    targetSlide.style.transform = `translateX(${0}px)`;\n    currentSlide.classList.remove(\"active\");\n    targetSlide.classList.add(\"active\");\n\n    // Hide arrows if at end of carousel\n    if (!targetSlide.nextElementSibling) {\n        nextButton.classList.add(\"hidden\");\n        prevButton.classList.remove(\"hidden\");\n    } else if (!targetSlide.previousElementSibling) {\n        prevButton.classList.add(\"hidden\");\n        nextButton.classList.remove(\"hidden\");\n    } else {\n        nextButton.classList.remove(\"hidden\");\n        prevButton.classList.remove(\"hidden\");\n    }\n\n    // Transition the current slide out of view after a short delay\n    setTimeout(() => {\n        targetSlide.style.transition = `transform ${0}ms ease`;\n        currentSlide.style.transform = `translateX(${isRight ? \"\" : \"-\"\n            }${slideWidth}px)`;\n        disableButtons([nextButton, prevButton], false);\n        disableNav(dots, false);\n    }, speed);\n};","import { createButton, disableButtons } from '@/js/buttons';\nimport { createNav, disableNav, updateNav } from '@/js/navigation';\nimport { setSlide, moveToSlide } from '@/js/slides';\n\nclass BdCarousel {\n    constructor(element) {\n        this.element = element;\n        this.wrapper = this.element.querySelector('.bd-carousel__wrapper');\n        this.currentIndex = 0;\n\n        // Read custom attributes\n        this.speed = parseInt(this.element.getAttribute('data-speed')) || 3000; // default to 3000ms\n        this.direction = this.element.getAttribute('data-direction') || 'left'; // default direction is left\n        this.autoplay = this.element.getAttribute('data-autoplay') === 'true'; // default false\n        this.autoplayTimer = parseInt(this.element.getAttribute('data-autoplay-timer')) || 5000; // default to 5000ms\n\n        this.init();\n    }\n\n    init() {\n        // Create carousel elements\n        const carousel = this.element;\n        const track = this.wrapper;\n        const slides = Array.from(track.children);\n\n        // Create buttons and nav\n        const nextButton = createButton(carousel, 'next');\n        const prevButton = createButton(carousel, 'prev');\n        const nav = createNav(carousel);\n\n        // Set initial variables\n        const direction = this.direction === 'left' ? true : false;\n        const autoplay = this.autoplay;\n        const speed = this.speed;\n        const autoplayTimer = this.autoplayTimer;\n        let slideWidth = slides[0].getBoundingClientRect().width;\n\n        // Update slide width on window resize\n        window.addEventListener(\"resize\", () => {\n            slideWidth = slides[0].getBoundingClientRect().width;\n        });\n\n        // Set slides positions and nav\n        slides.forEach((slide, index) => setSlide(nav, slide, index, slideWidth));\n\n        // Set initial slide and nav\n        prevButton.classList.add(\"hidden\"); // Hide first arrow on load\n        const dots = Array.from(nav.children); // Set dots arrays\n\n        // Event listener for next button click\n        nextButton.addEventListener(\"click\", (e) => {\n            const currentSlide = track.querySelector(\".active\");\n            const nextSlide = currentSlide.nextElementSibling;\n            const currentDot = nav.querySelector(\".active\");\n            const nextDot = currentDot.nextElementSibling;\n\n            if (nextSlide) {\n                moveToSlide({ currentSlide, targetSlide: nextSlide, isRight: direction, nextButton, prevButton, dots, slideWidth, speed });\n                updateNav(currentDot, nextDot, autoplayTimer);\n            }\n        });\n\n        // Event listener for previous button click\n        prevButton.addEventListener(\"click\", (e) => {\n            const currentSlide = track.querySelector(\".active\");\n            const prevSlide = currentSlide.previousElementSibling;\n            const currentDot = nav.querySelector(\".active\");\n            const prevDot = currentDot.previousElementSibling;\n\n            if (prevSlide) {\n                moveToSlide({ currentSlide, targetSlide: prevSlide, isRight: direction, nextButton, prevButton, dots, slideWidth, speed });\n                updateNav(currentDot, prevDot, autoplayTimer);\n            }\n        });\n\n        // When dot is clicked\n        nav.addEventListener(\"click\", (e) => {\n            const targetDot = e.target.closest(\"button\");\n\n            if (!targetDot) return;\n\n            const currentSlide = track.querySelector(\".active\");\n            const currentDot = nav.querySelector(\".active\");\n            const currentSlideIndex = slides.findIndex((slide) => slide === currentSlide);\n            const targetIndex = dots.findIndex((dot) => dot === targetDot);\n            const targetSlide = slides[targetIndex];\n\n            if (targetIndex > currentSlideIndex) {\n                moveToSlide({ currentSlide, targetSlide, isRight: direction, nextButton, prevButton, dots, slideWidth, speed });\n            } else if (targetIndex < currentSlideIndex) {\n                moveToSlide({ currentSlide, targetSlide, isRight: direction, nextButton, prevButton, dots, slideWidth, speed });\n            }\n\n            updateNav(currentDot, targetDot, autoplayTimer);\n        });\n\n        // If there's only one slide don't show navigation or autoplay\n        if (slides.length <= 1) {\n            nextButton.classList.add('hidden');\n            prevButton.classList.add('hidden');\n            nav.classList.add('hidden');\n        } else {\n            const currentDot = nav.querySelector(\".active\");\n            const timer = currentDot.querySelector(\".bd-carousel__nav-dot-timer\");\n            timer.style.animation = `timerAnimation ${autoplayTimer}ms linear forwards`;\n\n            function startAutoplay() {\n                return setInterval(() => {\n                    const currentSlide = track.querySelector(\".active\");\n                    const nextSlide = currentSlide.nextElementSibling || slides[0];\n                    const currentDot = nav.querySelector(\".active\");\n                    const nextDot = currentDot.nextElementSibling || dots[0];\n\n                    moveToSlide({ currentSlide, targetSlide: nextSlide, isRight: direction, nextButton, prevButton, dots, slideWidth, speed });\n                    updateNav(currentDot, nextDot, autoplayTimer);\n                }, autoplayTimer);\n            }\n            let autoplayInterval = startAutoplay();\n\n\n            nextButton.addEventListener(\"click\", () => {\n                clearInterval(autoplayInterval);\n                autoplayInterval = startAutoplay();\n            });\n            prevButton.addEventListener(\"click\", () => {\n                clearInterval(autoplayInterval);\n                autoplayInterval = startAutoplay();\n            });\n        }\n    }\n}\n\n// Initialize the carousel\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    document.querySelectorAll('.bd-carousel').forEach((carousel) => {\n        new BdCarousel(carousel);\n    });\n});\n"],"names":["createButton","element","type","button","document","createElement","icon","classList","add","appendChild","disableButtons","buttons","boolean","forEach","disabled","disableNav","dots","dot","updateNav","currentDot","targetDot","autoplayTimer","remove","querySelector","style","animation","concat","moveToSlide","_ref","currentSlide","targetSlide","isRight","nextButton","prevButton","slideWidth","speed","transition","transform","nextElementSibling","previousElementSibling","setTimeout","BdCarousel","_classCallCheck","this","wrapper","currentIndex","parseInt","getAttribute","direction","autoplay","init","key","value","carousel","track","slides","Array","from","children","nav","createNav","getBoundingClientRect","width","window","addEventListener","slide","index","timer","text","slideTitle","innerText","createDot","setSlide","e","nextSlide","nextDot","prevSlide","prevDot","target","closest","currentSlideIndex","findIndex","targetIndex","length","startAutoplay","setInterval","autoplayInterval","clearInterval","querySelectorAll"],"sourceRoot":""}